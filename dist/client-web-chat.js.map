{"version":3,"sources":["../src/compiled/client-concat.js"],"names":["console","log","Notification","requestPermission","then","result","app","angular","module","socket","io","username","chat","on","user","alert","emit","spawnNotification","body","icon","title","note","cleanInput","input","scrollChat","chatlog_id","window","setTimeout","elem","document","getElementById","pane","getElementsByClassName","scrollTop","scrollHeight","component_path","userIsTyping","controller","view","lobbyname","changeView","selfref","findIndex","x","newview","push","onViewChange","$event","tabController","$scope","selected","selectTab","addView","$apply","data","name","chatLogController","messages","typing","$onInit","logname","room","chatlog","receiveMessage","text","typingEvent","addMessage","index","indexOf","splice","onlineUsersController","onlineUsers","user_array","gravatar","component","templateUrl","bindings"],"mappings":"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","file":"client-web-chat.js","sourcesContent":["console.log(\"Loading web-chat.js\");\r\n\r\nNotification.requestPermission().then(function(result) {\r\n  console.log(result);\r\n});\r\n\r\nvar app = angular.module(\"chatApp\", []);\r\nvar socket = io();\r\n\r\nvar username;\r\nvar chat;\r\n\r\nsocket.on(\"deny username\", function(user){\r\n\talert(\"Username invalid\")\r\n});\r\n\r\nsocket.on(\"grant username\", function(user){\r\n\tusername = user;\r\n});\r\n\r\nsocket.emit(\"request username\", \"steven\");\r\n/*\r\nsocket.on(\"new message\", function(data){\r\n\tconsole.log(\"received new message\")\r\n\ttestmessages = data;\r\n\tconsole.log(testmessages);\r\n})*/;function spawnNotification(body, icon, title)\r\n{\r\n\tvar note = new Notification(title, {body: body, icon: icon});\r\n}\r\n\r\nfunction cleanInput(input) {\r\n\tif (input == \"\" || input == null)\r\n\t\treturn false;\r\n\telse{\r\n\t\treturn input;\r\n\t}\r\n}\r\n\r\nfunction scrollChat(chatlog_id) {\r\n\twindow.setTimeout(function(){\r\n\t\tconsole.log(\"Scroll \" + chatlog_id);\r\n\t\tlet elem = document.getElementById(chatlog_id);\r\n\t\tlet pane = elem.getElementsByClassName('active-pane')[0];\r\n\t\tpane.scrollTop = pane.scrollHeight + 100;\t\r\n\t}, 100);\r\n}\r\n;var component_path = \"src/components/\";\r\n\r\nvar userIsTyping = false;\r\n\r\napp.controller('RootController', function() {\r\n\tthis.view = [{lobbyname: \"lobby\"}]\r\n\r\n\tthis.changeView = function(username) {\r\n\t\tconsole.log(selfref.view.findIndex(x => x.lobbyname==username))\r\n\t\tif(selfref.view.findIndex(x => x.lobbyname==username) == -1)\r\n\t\t{\r\n\t\t\tconsole.log(\"Add tab\");\r\n\t\t\tvar newview = this.view;\r\n\t\t\tnewview.push({lobbyname: username});\r\n\t\t\tthis.view = newview;\r\n\t\t\t//alternative method to using $scope.$apply, send out notification that binding changed\r\n\t\t\tthis.onViewChange({$event: {view: newview}})\r\n\t\t}\r\n\t}\r\n});\r\n\r\nfunction tabController($scope){\r\n\tvar selfref = this;\r\n\tthis.selected = \"lobby\";\r\n\r\n\tthis.selectTab = function \t(lobbyname) {\r\n\t\tuserIsTyping = false;\r\n\t\tconsole.log(\"User changed tabs, typing: \" + userIsTyping);\r\n\t\tthis.selected = lobbyname;\r\n\t}\r\n\r\n\tthis.addView = function(username) {\r\n\t\tconsole.log(selfref.view.findIndex(x => x.lobbyname==username))\r\n\t\tif(selfref.view.findIndex(x => x.lobbyname==username) == -1)\r\n\t\t{\r\n\t\t\tconsole.log(\"Add tab\");\r\n\t\t\tvar newview = this.view;\r\n\t\t\tnewview.push({lobbyname: username});\r\n\t\t\tthis.view = newview;\r\n\t\t\tconsole.log(this.view);\r\n\t\t\t//alternative method to using $scope.$apply, send out notification that binding changed\r\n\t\t\t$scope.$apply(this.onViewChange({$event: {view: newview}}));\r\n\t\t}\r\n    }\r\n\r\n    socket.on(\"open private messenge tab\", function(data){\r\n    \tconsole.log(\"incoming request, opening private messenger \" + name);\r\n    \t//check if that user as a window yet\r\n    \tconsole.log(selfref.view);\r\n\r\n    \tselfref.addView(data.name);\r\n\r\n    })\r\n}\r\n\r\nfunction chatLogController($scope){\r\n\tvar selfref = this;\r\n\tthis.messages = [];\r\n\tthis.typing = [];\r\n\r\n\tthis.$onInit = function(){\r\n\t\tconsole.log(\"Logname: \" + selfref.logname);\r\n\t\tif (selfref.logname == 'lobby'){\r\n\t\t\tconsole.log(\"Make chat log history request\");\r\n\t\t\tsocket.emit(\"request chat history\");\r\n\t\t}\r\n\t\tsocket.on(\"user typing\", function(user, room){\r\n\t\t\tconsole.log(\"user typing event\")\r\n\t\t\tif (selfref.logname == room){\r\n\t\t\t\t$scope.$apply(selfref.typing.push(user))\r\n\t\t\t\tscrollChat(selfref.logname);\r\n\t\t\t}\r\n\t\t})\r\n\t\tsocket.on(\"get chat history\", function(chatlog){\r\n\t\t\tconsole.log(\"Get chat received\")\r\n\t\t\tif (selfref.logname == 'lobby')\r\n\t\t\t{\r\n\r\n\t\t\t\tconsole.log(\"Loading Chat\");\t\r\n\t\t\t\tselfref.messages = chatlog;\r\n\t\t\t\t$scope.$apply(function(){\r\n\t\t\t\t\t//changes to the array don't update immediately unless $apply is used\r\n\t\t\t\t\tselfref.messages = chatlog;\r\n\t\t\t\t}); \r\n\t\t\t\tscrollChat(selfref.logname);\r\n\t\t\t}\r\n\t\t});\r\n\t\tsocket.on(\"update chat log\", function(data){\r\n\t\t\tif (selfref.logname == data.room && selfref.logname == \"lobby\"){ //was selfref message intended for me?\r\n\t\t\t\tconsole.log(\"received new message\");\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\t$scope.$apply(selfref.receiveMessage(data)); \r\n\t\t\t}\r\n\t\t})\r\n\t\tsocket.on(\"update private log\", function(name, text){\r\n\t\t\tif (selfref.logname == name){\r\n\t\t\t\tconsole.log(\"PM from \" + name);\r\n\t\t\t\t$scope.$apply(selfref.receiveMessage({name: name, text: text, room: name})); \r\n\t\t\t}\r\n\t\t})\t\r\n\t}\r\n\r\n\tselfref.typingEvent = function() {\r\n\t\tif (!userIsTyping)\r\n\t\t{\r\n\t\t\tuserIsTyping = true;\r\n\t\t\tsocket.emit(\"typing\", username, selfref.logname);\r\n\t\t\tconsole.log(\"Typing event initiated\");\r\n\t\t}\t\t\r\n\t};\r\n\r\n\tselfref.addMessage = function(){\r\n\t\tuserIsTyping = false;\r\n\t\tif (cleanInput(selfref.input))\r\n\t\t{\r\n\t\t\tconsole.log(\"Emitting message\")\r\n\t\t\tsocket.emit(\"send\", {name: username, text: selfref.input, room: selfref.logname});\r\n\t\t\tselfref.messages.push({name: username, text: selfref.input, room: selfref.logname});\r\n\t\t\tscrollChat(selfref.logname);\r\n\t\t}\r\n\t\tselfref.input = \"\";\r\n\t};\r\n\r\n\tselfref.receiveMessage = function(data){\r\n\t\t//remove typing indicator\r\n\t\tconsole.log(\"Received message:\")\r\n\t\tconsole.log(data);\r\n\t\t\r\n\t\tvar index = selfref.typing.indexOf(data.name)\r\n\t\tif (index != -1){\r\n\t\t\tselfref.typing.splice(index, 1);\r\n\t\t}\r\n\t\tselfref.messages.push(data);\r\n\t\tscrollChat(selfref.logname);\r\n\t\tconsole.log(selfref.messages);\r\n\t}\r\n};\r\n\r\nfunction onlineUsersController($scope){\r\n\tvar selfref = this;\r\n\tthis.onlineUsers = [];\r\n\r\n\tthis.addView = function(username) {\r\n\t\tconsole.log(selfref.view.findIndex(x => x.lobbyname==username))\r\n\t\tif(selfref.view.findIndex(x => x.lobbyname==username) == -1)\r\n\t\t{\r\n\t\t\tconsole.log(\"Add tab\");\r\n\t\t\tvar newview = this.view;\r\n\t\t\tnewview.push({lobbyname: username});\r\n\t\t\tthis.view = newview;\r\n\t\t\t//alternative method to using $scope.$apply, send out notification that binding changed\r\n\t\t\tthis.onViewChange({$event: {view: newview}})\r\n\t\t}\r\n    }\r\n\r\n    socket.emit(\"request online users\", username);\r\n\r\n\tsocket.on(\"respond online users\", function(user_array){\r\n\t\tconsole.log(\"respond online users event\")\r\n\t\t$scope.$apply(selfref.onlineUsers = user_array);\r\n\t\tconsole.log(user_array);\r\n\t});\r\n\tsocket.on(\"user online\", function(user){\r\n\t\t$scope.$apply(selfref.onlineUsers.push(user));\r\n\t\tconsole.log(user.name + \" came online\")\r\n\t\tconsole.log(selfref.onlineUsers)\r\n\t\tspawnNotification(user.name + \" came online\", user.gravatar, \"Online\");\r\n\t});\r\n\tsocket.on(\"user logged out\", function(user){\r\n\t\tconsole.log(user.name + \" went offline\");\r\n\t\tspawnNotification(user.name + \" went offline\", user.gravatar, \"Offline\");\r\n\t\tvar index = selfref.onlineUsers.findIndex(x => x.name==user.name);\r\n\t\t$scope.$apply(selfref.onlineUsers.splice(index, 1));\r\n\t})\r\n\tsocket.on(\"\")\r\n};\r\n\r\napp.component(\"chatLog\", {\r\n\t\ttemplateUrl: component_path + \"chat-log.html\",\r\n\t\tcontroller: chatLogController,\r\n\t\tbindings:{\r\n\t\t\tlogname: '@'\r\n\t\t},\r\n\t})\r\n\t// .component(\"message\", {\r\n\t// \ttemplateUrl: component_path + \"message.html\",\r\n\t// \tbindings: {\r\n\t// \t\tname: '='\r\n\t// \t},\r\n\t// \t controller: function() {\r\n\t// \t \tthis.text = \"text\";\r\n\t// \t \t//this.name = name;\r\n\t// \t }\r\n\t// })\r\n\t.component(\"tabs\", {\r\n\t\ttemplateUrl: component_path\t+ \"tabs.html\",\r\n\t\tcontroller: tabController,\r\n\t\tbindings:{\r\n\t\t\tview: '<',\r\n\t\t\tonViewChange: '&'\r\n\t\t},\r\n\t})\r\n\t.component(\"onlineUsers\", {\r\n\t\ttemplateUrl: component_path + \"online-users.html\",\r\n\t\tcontroller: onlineUsersController,\r\n\t\tbindings:{\r\n\t\t\tview: \"<\",\r\n\t\t\tonViewChange: '&'\r\n\t\t}\r\n\t})\r\n\t.component(\"user\", {\r\n\r\n\t});\r\n"]}